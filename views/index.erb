<h1>
  <!-- <a href="/tweet/<%= @tweet.tweet_id%>">
       #STARDEVELOPER
       </a> -->
</h1>

<% def width(s, size = 16)
  s.downcase.chars.inject(0) do |r, c|
    size_class = {
      "#" => 12,
      "@" => 13,
      ":" => 6,
      ";" => 6,
      "," => 6,
      "'" => 6,
      '"' => 8,
      "." => 6,
      "‘" => 6,
      "’" => 6,
      "a" => 13,
      "b" => 11,
      "c" => 11,
      "d" => 12,
      "g" => 12,
      "h" => 12,
      "i" => 6,
      "j" => 7,
      "k" => 13,
      "m" => 16,
      "n" => 13,
      "o" => 12,
      "q" => 12,
      "r" => 12,
      "s" => 11,
      "t" => 11,
      "u" => 12,
      "v" => 13,
      "w" => 17,
      "x" => 12,
      "y" => 11,
      "z" => 11,
    }.fetch(c, 10)
    r += (size_class / 16.0) * size.to_f
    r
  end
end
%>
<div id="themessage">
  <%
  text = @tweet.text.concat(" ")
  lines = text.scan(/.{1,16}[ ,;:]/).map(&:strip)
  %>
  <% line_height = 16 %>
  <% padding_y = 5 %>
  <% x_width = lines.map { |l| width(l) }.max %>
  <% y_height = (lines.length + 2) * line_height %>
  <% other_x_width = (lines.length + 1) * line_height * 2.5 %>

  <svg xmlns="http://www.w3.org/2000/svg" version="1.1" width="95%" viewBox="0 0  <%= [x_width + 20, y_height + 100].min %> <%= (lines.length + 2) * (line_height + padding_y) %>">
    <defs>
      <linearGradient id="fire"
                      x1="0" x2="50%" x3="100%
                          y1="0" y2="100%" >
        <stop stop-color="rgba(255,255,255,1)" offset="0%"/>
        <stop stop-color="rgba(220,220,220,0.9)" offset="50%"/>
        <stop stop-color="rgba(255,255,255,1)" offset="100%"/>
      </linearGradient>

      <filter id="shadow">
        <feDropShadow dx="1" dy="1" stdDeviation="6"/>
      </filter>

      <filter id="dropshadow" widht="130%" height="130%">
        <feGaussianBlur in="SourceAlpha" stdDeviation="2"/> <!-- stdDeviation is how much to blur -->
        <feOffset dx="1" dy="3" result="offsetblur"/> <!-- how much to offset -->
        <feComponentTransfer>
          <feFuncA type="linear" slope="0.3"/> <!-- slope is the opacity of the shadow -->
        </feComponentTransfer>
        <feMerge>
          <feMergeNode/> <!-- this contains the offset blurred image -->
          <feMergeNode in="SourceGraphic"/> <!-- this contains the element that the filter is applied to -->
        </feMerge>
      </filter>
    </defs>

    <g>
      <% a_x = width(@tweet.name, 12) %>
      <% a_y =  lines.length  * (line_height + padding_y)%>
      <rect x="<%= x_width - a_x - 8 %>" y="<%= 10+line_height/4 + a_y %>" width="<%= a_x + 12 %>" height="16" fill="red"></rect>
      <text text-anchor="start" font-size="12" fill="white" x="<%= x_width - a_x - 18 %>" y="<%= 10+line_height + a_y %>">
        <tspan>&ndash;</tspan>
        <tspan class="anonymous" dx="6">&nbsp;<%= @tweet.name %></tspan>
      </text>
    </g>

    <!-- <%= lines.max_by(&:length).length %> <%= lines.length %> -->
    <% lines.each.with_index do |t, index| %>
      <g transform="translate(<%= Random.rand(20) + 2 %>,1) rotate(<%= (Random.rand(60) - 30)/10.0 %>)">
        <rect filter="url(#dropshadow)" x="-2" y="<%=10+2+ (index * (line_height + padding_y)) %>" height="16" stroke-width="3" stroke="rgba(65,65,65,0.05)" fill="white" width="<%= width(t) + 2 %>" />
        <text class="line" font-size="16" fill="white" x="0" y="<%= 10+line_height + (index * (line_height + padding_y)) %>"><%= t %></text>
      </g>
    <% end %>
  </svg>

  <!-- <p>
       <a href="<%=@tweet.link %>">
       <%=@tweet.text%>
       </a>
       </p> -->
</div>

<script type="text/comment">
 22 karakters is volledig ding
 Tweet is maximum 280

 Dus splitten in regles van 22, 280/22 = 12 regels

 text = "OH 'Ik vind het wel tof om ook een beetje een gek lief te hebben' #stardeveloper"
 text.scan(/.{1,25}\W/).map(&:strip)

 words = text.split(" ")
</script>
